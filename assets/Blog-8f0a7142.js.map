{"version":3,"file":"Blog-8f0a7142.js","sources":["../../src/pages/Blog.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport fm from 'front-matter';\nimport '../styles/Blog.css';\n\nconst getPublicPath = (path) => {\n  const baseUrl = import.meta.env.BASE_URL;\n  const cleanPath = path.startsWith('/') ? path.substring(1) : path;\n  return `${baseUrl}${cleanPath}`;\n};\n\nexport default function Blog() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchAllPosts() {\n      try {\n        const manifestUrl = getPublicPath('/assets/posts/posts_manifest.json');\n        const manifestRes = await fetch(manifestUrl);\n        if (!manifestRes.ok) throw new Error('Failed to load manifest');\n        const slugs = await manifestRes.json();\n\n        const postPromises = slugs.map(async (slug) => {\n          try {\n            const postUrl = getPublicPath(`/assets/posts/${slug}.md`);\n            const postRes = await fetch(postUrl);\n            if (!postRes.ok) return null;\n            const raw = await postRes.text();\n\n            // front-matter: { attributes, body }\n            const { attributes } = fm(raw);\n\n            const formattedDate = new Date(attributes.date).toLocaleDateString('en-US', {\n              year: 'numeric', month: 'long', day: 'numeric'\n            });\n\n            return {\n              ...attributes,\n              slug,\n              formattedDate,\n              image: attributes.image ? getPublicPath(attributes.image) : null,\n            };\n          } catch {\n            return null;\n          }\n        });\n\n        const allPostData = (await Promise.all(postPromises))\n          .filter(p => p && p.date)\n          .sort((a, b) => new Date(b.date) - new Date(a.date));\n\n        setPosts(allPostData);\n      } catch (e) {\n        console.error('Gagal memuat daftar post:', e);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchAllPosts();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"blog-page-container\">\n        <div className=\"blog-content-wrapper\">Loading posts...</div>\n      </div>\n    );\n  }\n\n  if (!posts.length) {\n    return (\n      <div className=\"blog-page-container\">\n        <div className=\"blog-content-wrapper\">No posts found.</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"blog-page-container\">\n      <div className=\"blog-content-wrapper\">\n        <div className=\"section-title-container\">\n          <div className=\"section-title-pill\">My Blog</div>\n        </div>\n\n        <div className=\"blog-list\">\n          {posts.map((post) => (\n            <Link to={`/blog/${post.slug}`} key={post.slug} className=\"blog-card neon-card\">\n              {post.image && (\n                <div className=\"blog-card-img-container\">\n                  <img src={post.image} alt={post.title} className=\"blog-card-img\" />\n                </div>\n              )}\n              <div className=\"blog-card-content\">\n                <h3 className=\"post-title\">{post.title}</h3>\n                <p className=\"post-description\">{post.description}</p>\n                <div className=\"blog-card-meta\">{post.formattedDate}</div>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["getPublicPath","path","baseUrl","cleanPath","Blog","posts","setPosts","useState","loading","setLoading","useEffect","fetchAllPosts","manifestUrl","manifestRes","postPromises","slug","postUrl","postRes","raw","attributes","fm","formattedDate","allPostData","p","a","b","e","jsx","jsxs","post","Link"],"mappings":"8FAKA,MAAMA,EAAiBC,GAAS,CACxB,MAAAC,EAAU,IACVC,EAAYF,EAAK,WAAW,GAAG,EAAIA,EAAK,UAAU,CAAC,EAAIA,EACtD,MAAA,GAAGC,CAAO,GAAGC,CAAS,EAC/B,EAEA,SAAwBC,GAAO,CAC7B,KAAM,CAACC,EAAOC,CAAQ,EAAIC,EAAA,SAAS,CAAE,CAAA,EAC/B,CAACC,EAASC,CAAU,EAAIF,WAAS,EAAI,EAkD3C,OAhDAG,EAAAA,UAAU,IAAM,CACd,eAAeC,GAAgB,CACzB,GAAA,CACI,MAAAC,EAAcZ,EAAc,mCAAmC,EAC/Da,EAAc,MAAM,MAAMD,CAAW,EAC3C,GAAI,CAACC,EAAY,GAAU,MAAA,IAAI,MAAM,yBAAyB,EAG9D,MAAMC,GAFQ,MAAMD,EAAY,QAEL,IAAI,MAAOE,GAAS,CACzC,GAAA,CACF,MAAMC,EAAUhB,EAAc,iBAAiBe,CAAI,KAAK,EAClDE,EAAU,MAAM,MAAMD,CAAO,EACnC,GAAI,CAACC,EAAQ,GAAW,OAAA,KAClB,MAAAC,EAAM,MAAMD,EAAQ,OAGpB,CAAE,WAAAE,CAAA,EAAeC,EAAGF,CAAG,EAEvBG,EAAgB,IAAI,KAAKF,EAAW,IAAI,EAAE,mBAAmB,QAAS,CAC1E,KAAM,UAAW,MAAO,OAAQ,IAAK,SAAA,CACtC,EAEM,MAAA,CACL,GAAGA,EACH,KAAAJ,EACA,cAAAM,EACA,MAAOF,EAAW,MAAQnB,EAAcmB,EAAW,KAAK,EAAI,IAAA,CAC9D,MACM,CACC,OAAA,IACT,CAAA,CACD,EAEKG,GAAe,MAAM,QAAQ,IAAIR,CAAY,GAChD,OAAOS,GAAKA,GAAKA,EAAE,IAAI,EACvB,KAAK,CAACC,EAAGC,IAAM,IAAI,KAAKA,EAAE,IAAI,EAAI,IAAI,KAAKD,EAAE,IAAI,CAAC,EAErDlB,EAASgB,CAAW,QACbI,EAAG,CACF,QAAA,MAAM,4BAA6BA,CAAC,CAAA,QAC5C,CACAjB,EAAW,EAAK,CAClB,CACF,CAEcE,GAChB,EAAG,CAAE,CAAA,EAEDH,EAEAmB,EAAAA,IAAC,OAAI,UAAU,sBACb,eAAC,MAAI,CAAA,UAAU,uBAAuB,SAAA,kBAAgB,CAAA,CACxD,CAAA,EAICtB,EAAM,aASR,MAAI,CAAA,UAAU,sBACb,SAACuB,EAAA,KAAA,MAAA,CAAI,UAAU,uBACb,SAAA,CAACD,EAAAA,IAAA,MAAA,CAAI,UAAU,0BACb,SAAAA,EAAA,IAAC,OAAI,UAAU,qBAAqB,mBAAO,CAC7C,CAAA,QAEC,MAAI,CAAA,UAAU,YACZ,SAAAtB,EAAM,IAAKwB,GACTD,EAAAA,KAAAE,EAAA,CAAK,GAAI,SAASD,EAAK,IAAI,GAAoB,UAAU,sBACvD,SAAA,CAAAA,EAAK,OACJF,EAAAA,IAAC,MAAI,CAAA,UAAU,0BACb,SAACA,EAAAA,IAAA,MAAA,CAAI,IAAKE,EAAK,MAAO,IAAKA,EAAK,MAAO,UAAU,eAAgB,CAAA,EACnE,EAEFD,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAD,EAAA,IAAC,KAAG,CAAA,UAAU,aAAc,SAAAE,EAAK,MAAM,EACtCF,EAAA,IAAA,IAAA,CAAE,UAAU,mBAAoB,WAAK,YAAY,EACjDA,EAAA,IAAA,MAAA,CAAI,UAAU,iBAAkB,WAAK,cAAc,CAAA,EACtD,CAVmC,CAAA,EAAAE,EAAK,IAW1C,CACD,EACH,CAAA,CACF,CAAA,CACF,CAAA,EA9BEF,EAAAA,IAAC,OAAI,UAAU,sBACb,eAAC,MAAI,CAAA,UAAU,uBAAuB,SAAA,iBAAe,CAAA,CACvD,CAAA,CA8BN"}